gamma_init, a_theta, b_theta, sm_loop, total_iter)
total_time <- Sys.time() - start_time
total_time
t(test_final$alpha_update)[50:100, ]
t(test_final$clus_assign)[50:100, ]
t(test_final$clus_assign)[25:101, ]
summary(salso(t(test_final$clus_assign)[25:101, ]))
summary(salso(t(test_final$clus_assign)[25:101, ]))$estimate
table(summary(salso(t(test_final$clus_assign)[25:101, ]))$estimate)
### Required Library: ----------------------------------------------------------
library(Rcpp)
library(RcppArmadillo)
library(devtools)
library(DirichletReg)
library(salso)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
### Data Simulation: -----------------------------------------------------------
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(10, 15, 20, 10, 15)
alpha_vec <- rgamma(5, xi, 1)
psi <- alpha_vec[1:3]/sum(alpha_vec[1:3])
ci <- sample(seq(1,3), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- t(matrix(c(10, 1, 1, 1, 10, 1, 1, 1, 10, 1, 1, 1, 10, 10, 10),
nrow = 3))
nu_k <- rdirichlet(3, gamma_hyper[1:3, ])
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
### Testing Area: --------------------------------------------------------------
set.seed(20882)
split_merge(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 5)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
split_merge(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 5)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
set.seed(20882)
split_merge(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 5)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
split_merge(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 5)
library(Rcpp)
library(RcppArmadillo)
library(devtools)
library(DirichletReg)
library(salso)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
test <- split_merge(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 5)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
set.seed(20882)
test <- split_merge(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 5)
split_merge(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 20)
set.seed(20882)
test <- split_merge(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 20)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
set.seed(20882)
test <- split_merge(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 20)
test
test <- split_merge(5, ci, c(alpha_vec[1:3], 0, 0), xi, data_test,
gamma_hyper, 0.5, 0.5, 20)
test
test <- split_merge(5, ci, c(alpha_vec[1:3], 0, 0), xi, data_test,
gamma_hyper, 0.5, 0.5, 20)
test
set.seed(20882)
test <- split_merge(5, ci, c(alpha_vec[1:3], 0, 0), xi, data_test,
gamma_hyper, 0.5, 0.5, 20)
test
set.seed(20882)
test <- split_merge(5, ci, c(alpha_vec[1:3], 0, 0), xi, data_test,
gamma_hyper, 0.5, 0.5, 50)
test
knitr::opts_chunk$set(echo = TRUE)
library(Rcpp)
library(RcppArmadillo)
library(devtools)
library(DirichletReg)
library(salso)
library(ClusterProj)
rm(list = ls())
### Data Simulation
set.seed(20882)
### Assignment vector
xi <- rep(10, 5)
alpha_vec <- rgamma(5, xi, 1)
psi <- alpha_vec/sum(alpha_vec)
ci <- sample(seq(1,5), size = 30, replace = TRUE, prob = psi)
gamma_hyper <- diag(10)[1:5, ] * 10
gamma_hyper[gamma_hyper == 0] <- 1
nu_k <- rdirichlet(5, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 10, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
round(nu_k, 4)
table(ci)
set.seed(20882)
gamma_init <- diag(10)[1:8, ] * 10
gamma_init[gamma_init == 0] <- 1
ci_init <- rep(1, 30)
xi_init <- rep(10, 8)
alpha_init <- rgamma(8, xi_init, 1)
a_theta <- 0.5
b_theta <- 0.5
sm_loop <- 10
total_iter <- 750 ### Note: Have a problem when run more loop
start_time <- Sys.time()
test_final <- cluster_func(8, ci_init, alpha_init, xi_init, data_test,
gamma_init, a_theta, b_theta, sm_loop, total_iter)
total_time <- Sys.time() - start_time
set.seed(20882)
gamma_init <- diag(10)[1:8, ] * 10
gamma_init[gamma_init == 0] <- 1
ci_init <- rep(1, 30)
xi_init <- rep(10, 8)
alpha_init <- rgamma(8, xi_init, 1)
a_theta <- 0.5
b_theta <- 0.5
sm_loop <- 10
total_iter <- 10000 ### Note: Have a problem when run more loop
start_time <- Sys.time()
test_final <- cluster_func(8, ci_init, alpha_init, xi_init, data_test,
gamma_init, a_theta, b_theta, sm_loop, total_iter)
total_time <- Sys.time() - start_time
total_time
table(summary(salso(t(test_final$clus_assign)[25:101, ]))$estimate)
table(summary(salso(t(test_final$clus_assign)[25:101, ]))$estimate)
table(summary(salso(t(test_final$clus_assign)))$estimate)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
rm(list = ls())
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(10, 15, 20, 10, 15)
alpha_vec <- rgamma(5, xi, 1)
psi <- alpha_vec[1:3]/sum(alpha_vec[1:3])
ci <- sample(seq(1,3), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- t(matrix(c(10, 1, 1, 1, 10, 1, 1, 1, 10, 1, 1, 1, 10, 10, 10),
nrow = 3))
nu_k <- rdirichlet(3, gamma_hyper[1:3, ])
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
set.seed(20882)
test <- split_merge(5, ci, c(alpha_vec[1:3], 0, 0), xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
### Testing Area: --------------------------------------------------------------
set.seed(20882)
split_merge(5, ci, c(alpha_vec[1:3], 0, 0), xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
test <- split_merge(5, ci, c(alpha_vec[1:3], 0, 0), xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test
set.seed(20882)
test <- split_merge(5, ci, c(alpha_vec[1:3], 0, 0), xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test <- split_merge(5, ci, c(alpha_vec[1:3], 0, 0), xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test
test <- split_merge(5, rep(1:5, 6), alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test
test <- split_merge(5, rep(1:5, 6), alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test <- split_merge(5, rep(1:5, 6), alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test <- split_merge(5, rep(1:5, 6), alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test <- split_merge(5, rep(1:5, 6), alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test <- split_merge(5, rep(1:5, 6), alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test <- split_merge(5, rep(1:5, 6), alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
test <- split_merge(5, ci, c(alpha_vec[1:3], 0, 0), xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test <- split_merge(5, ci, c(alpha_vec[1:3], 0, 0), xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test <- split_merge(5, ci, c(alpha_vec[1:3], 0, 0), xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test <- split_merge(5, rep(1:5, 6), alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test <- split_merge(5, rep(1:5, 6), alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
rm(list = ls())
### Data Simulation
set.seed(20882)
### Assignment vector
xi <- rep(10, 5)
alpha_vec <- rgamma(5, xi, 1)
psi <- alpha_vec/sum(alpha_vec)
ci <- sample(seq(1,5), size = 30, replace = TRUE, prob = psi)
gamma_hyper <- diag(10)[1:5, ] * 10
gamma_hyper[gamma_hyper == 0] <- 1
nu_k <- rdirichlet(5, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 10, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
set.seed(20882)
gamma_init <- diag(10)[1:8, ] * 10
gamma_init[gamma_init == 0] <- 1
ci_init <- rep(1, 30)
xi_init <- rep(10, 8)
alpha_init <- rgamma(8, xi_init, 1)
a_theta <- 0.5
b_theta <- 0.5
sm_loop <- 10
total_iter <- 10000 ### Note: Have a problem when run more loop
start_time <- Sys.time()
test_final <- cluster_func(8, ci_init, alpha_init, xi_init, data_test,
gamma_init, a_theta, b_theta, sm_loop, total_iter)
total_time <- Sys.time() - start_time
total_time
table(summary(salso(t(test_final$clus_assign)))$estimate)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
rm(list = ls())
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(10, 15, 20, 10, 15)
alpha_vec <- rgamma(5, xi, 1)
psi <- alpha_vec[1:3]/sum(alpha_vec[1:3])
ci <- sample(seq(1,3), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- t(matrix(c(10, 1, 1, 1, 10, 1, 1, 1, 10, 1, 1, 1, 10, 10, 10),
nrow = 3))
nu_k <- rdirichlet(3, gamma_hyper[1:3, ])
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
test <- split_merge(5, ci, c(alpha_vec[1:3], 0, 0), xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test
split_merge(5, rep(1:5, 6), alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test <- split_merge(5, ci, c(alpha_vec[1:3], 0, 0), xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test
rm(list = ls())
### Data Simulation
set.seed(20882)
### Assignment vector
xi <- rep(10, 5)
alpha_vec <- rgamma(5, xi, 1)
psi <- alpha_vec/sum(alpha_vec)
ci <- sample(seq(1,5), size = 30, replace = TRUE, prob = psi)
gamma_hyper <- diag(10)[1:5, ] * 10
gamma_hyper[gamma_hyper == 0] <- 1
nu_k <- rdirichlet(5, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 10, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
set.seed(20882)
gamma_init <- diag(10)[1:8, ] * 10
gamma_init[gamma_init == 0] <- 1
ci_init <- rep(1, 30)
xi_init <- rep(10, 8)
alpha_init <- rgamma(8, xi_init, 1)
a_theta <- 0.5
b_theta <- 0.5
sm_loop <- 10
total_iter <- 10000 ### Note: Have a problem when run more loop
start_time <- Sys.time()
test_final <- cluster_func(8, ci_init, alpha_init, xi_init, data_test,
gamma_init, a_theta, b_theta, sm_loop, total_iter)
total_time <- Sys.time() - start_time
total_time
table(summary(salso(t(test_final$clus_assign)))$estimate)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
### Data Simulation: -----------------------------------------------------------
rm(list = ls())
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(10, 15, 20, 10, 15)
alpha_vec <- rgamma(5, xi, 1)
psi <- alpha_vec[1:3]/sum(alpha_vec[1:3])
ci <- sample(seq(1,3), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- t(matrix(c(10, 1, 1, 1, 10, 1, 1, 1, 10, 1, 1, 1, 10, 10, 10),
nrow = 3))
nu_k <- rdirichlet(3, gamma_hyper[1:3, ])
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
set.seed(20882)
test <- split_merge(5, ci, c(alpha_vec[1:3], 0, 0), xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
test <- split_merge(5, ci, c(alpha_vec[1:3], 0, 0), xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test
rm(list = ls())
### Data Simulation
set.seed(20882)
### Assignment vector
xi <- rep(10, 5)
alpha_vec <- rgamma(5, xi, 1)
psi <- alpha_vec/sum(alpha_vec)
ci <- sample(seq(1,5), size = 30, replace = TRUE, prob = psi)
gamma_hyper <- diag(10)[1:5, ] * 10
gamma_hyper[gamma_hyper == 0] <- 1
nu_k <- rdirichlet(5, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 10, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
set.seed(20882)
gamma_init <- diag(10)[1:8, ] * 10
gamma_init[gamma_init == 0] <- 1
ci_init <- rep(1, 30)
xi_init <- rep(10, 8)
alpha_init <- rgamma(8, xi_init, 1)
a_theta <- 0.5
b_theta <- 0.5
sm_loop <- 10
total_iter <- 10000 ### Note: Have a problem when run more loop
start_time <- Sys.time()
test_final <- cluster_func(8, ci_init, alpha_init, xi_init, data_test,
gamma_init, a_theta, b_theta, sm_loop, total_iter)
total_time <- Sys.time() - start_time
total_time
table(summary(salso(t(test_final$clus_assign)))$estimate)
### Data Simulation: -----------------------------------------------------------
rm(list = ls())
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(10, 15, 20, 10, 15)
alpha_vec <- rgamma(5, xi, 1)
psi <- alpha_vec[1:3]/sum(alpha_vec[1:3])
ci <- sample(seq(1,3), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- t(matrix(c(10, 1, 1, 1, 10, 1, 1, 1, 10, 1, 1, 1, 10, 10, 10),
nrow = 3))
nu_k <- rdirichlet(3, gamma_hyper[1:3, ])
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
test <- split_merge(5, rep(1:5, 6), alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test
test <- split_merge(5, rep(1:5, 6), alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test <- split_merge(5, rep(1:5, 6), alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
test <- split_merge(5, ci, c(alpha_vec[1:3], 0, 0), xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test
test <- split_merge(5, rep(1:5, 6), alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
test <- split_merge(5, rep(1:5, 6), alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test
test <- split_merge(5, rep(1:5, 6), alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test <- split_merge(5, rep(1:5, 6), alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
test <- split_merge(5, rep(1:5, 6), alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test
test <- split_merge(5, ci, c(alpha_vec[1:3], 0, 0), xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
test <- split_merge(5, ci, c(alpha_vec[1:3], 0, 0), xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test
test <- split_merge(5, rep(1:5, 6), alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test
test <- split_merge(5, rep(1:5, 6), alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test <- split_merge(5, rep(1:5, 6), alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
test
rm(list = ls())
### Data Simulation
set.seed(20882)
### Assignment vector
xi <- rep(10, 5)
alpha_vec <- rgamma(5, xi, 1)
psi <- alpha_vec/sum(alpha_vec)
ci <- sample(seq(1,5), size = 30, replace = TRUE, prob = psi)
gamma_hyper <- diag(10)[1:5, ] * 10
gamma_hyper[gamma_hyper == 0] <- 1
nu_k <- rdirichlet(5, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 10, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
set.seed(20882)
gamma_init <- diag(10)[1:8, ] * 10
gamma_init[gamma_init == 0] <- 1
ci_init <- rep(1, 30)
xi_init <- rep(10, 8)
alpha_init <- rgamma(8, xi_init, 1)
a_theta <- 0.5
b_theta <- 0.5
sm_loop <- 10
total_iter <- 10000 ### Note: Have a problem when run more loop
start_time <- Sys.time()
test_final <- cluster_func(8, ci_init, alpha_init, xi_init, data_test,
gamma_init, a_theta, b_theta, sm_loop, total_iter)
total_time <- Sys.time() - start_time
total_time
table(summary(salso(t(test_final$clus_assign)))$estimate)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
