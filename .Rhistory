library(ClusterProj)
set.seed(20882)
expand_cluster(ci, psi, xi, 0.5, 0.5, mu)
set.seed(20882)
### Data Simulation: -----------------------------------------------------------
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(2, 2, 2, 2, 2)
psi <- rdirichlet(1, xi[1:3]) ### psi_i = alp_i/sum(alp)
mu <- rgamma(1, 2) ## sum(alp)
ci <- sample(seq(1,3), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- c(2, 1, 3)
nu_k <- rdirichlet(3, gamma_hyper)
sum_y <- rpois(30, 2)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
data_test
psi
mu
ci
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(5, 5, 5, 5, 5)
psi <- rdirichlet(1, xi[1:3]) ### psi_i = alp_i/sum(alp)
mu <- rgamma(1, 5) ## sum(alp)
ci <- sample(seq(1,3), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- c(2, 1, 3)
nu_k <- rdirichlet(3, gamma_hyper)
sum_y <- rpois(30, 2)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
ci
data_test
psi
### Data Simulation: -----------------------------------------------------------
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(5, 5, 5, 5, 5)
psi <- rdirichlet(1, xi[1:3]) ### psi_i = alp_i/sum(alp)
mu <- rgamma(1, 5) ## sum(alp)
ci <- sample(seq(1,3), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- c(2, 1, 3)
nu_k <- rdirichlet(3, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
data_test
set.seed(20882)
expand_cluster(ci, psi, xi, 0.5, 0.5, mu)
ci
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
set.seed(20882)
expand_cluster(ci, psi, xi, 0.5, 0.5, mu)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
set.seed(20882)
expand_cluster(ci, psi, xi, 0.5, 0.5, mu)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
set.seed(20882)
expand_cluster(ci, psi, xi, 0.5, 0.5, mu)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
set.seed(20882)
expand_cluster(ci, psi, xi, 0.5, 0.5, mu)
### Required Library: ----------------------------------------------------------
library(Rcpp)
library(RcppArmadillo)
library(devtools)
library(DirichletReg)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
### Data Simulation: -----------------------------------------------------------
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(5, 5, 5, 5, 5)
psi <- rdirichlet(1, xi[1:3]) ### psi_i = alp_i/sum(alp)
mu <- rgamma(1, 5) ## sum(alp)
ci <- sample(seq(1,3), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- c(2, 1, 3)
nu_k <- rdirichlet(3, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
set.seed(20882)
expand_cluster(ci, psi, xi, 0.5, 0.5, mu)
### Data Simulation: -----------------------------------------------------------
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(1, 2, 3, 4, 5)
psi <- rdirichlet(1, xi[1:3]) ### psi_i = alp_i/sum(alp)
ci <- sample(seq(1,3), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- c(2, 1, 3)
nu_k <- rdirichlet(3, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
data_test
ci
xi <- c(20, 15, 25, 30, 15)
psi <- rdirichlet(1, xi[1:3]) ### psi_i = alp_i/sum(alp)
ci <- sample(seq(1,3), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- c(2, 1, 3)
nu_k <- rdirichlet(3, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
ci
psi
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
expand_cluster(ci, psi, xi, 0.5, 0.5)
rgamma(1, 13, 1)
rgamma(1, 13, 1)
rgamma(1, 13, 1)
rgamma(1, 13, 1)
rgamma(1, 13, 1)
rgamma(1, 13, 1)
rgamma(1, 15 + 20 + 25, 1)
### Data Simulation: -----------------------------------------------------------
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(20, 15, 25, 10, 15)
psi <- rdirichlet(1, xi[1:3]) ### psi_i = alp_i/sum(alp)
ci <- sample(seq(1,3), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- c(2, 1, 3)
nu_k <- rdirichlet(3, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
set.seed(20882)
expand_cluster(ci, psi, xi, 0.5, 0.5)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
expand_cluster(ci, psi, xi, 0.5, 0.5)
psi
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
expand_cluster(ci, psi, xi, 0.5, 0.5)
expand_cluster(ci, psi, xi, 0.5, 0.5)
expand_cluster(ci, psi, xi, 0.5, 0.5)
expand_cluster(ci, psi, xi, 0.5, 0.5)
expand_cluster(ci, psi, xi, 0.5, 0.5)
expand_cluster(ci, psi, xi, 0.5, 0.5)
expand_cluster(ci, psi, xi, 0.5, 0.5)
set.seed(20882)
expand_cluster(ci, psi, xi, 0.5, 0.5)
set.seed(20882)
expand_cluster(ci, psi, xi, 0.5, 0.5)
set.seed(20882)
expand_cluster(ci, psi, xi, 0.5, 0.5)
### Required Library: ----------------------------------------------------------
library(Rcpp)
library(RcppArmadillo)
library(devtools)
library(DirichletReg)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
### Data Simulation: -----------------------------------------------------------
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(20, 15, 25, 10, 15)
psi <- rdirichlet(1, xi[1:3]) ### psi_i = alp_i/sum(alp)
ci <- sample(seq(1,3), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- c(2, 1, 3)
nu_k <- rdirichlet(3, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
set.seed(20882)
expand_cluster(ci, psi, xi, 0.5, 0.5)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
set.seed(20882)
expand_cluster(ci, psi, xi, 0.5, 0.5)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
set.seed(20882)
expand_cluster(ci, psi, xi, 0.5, 0.5)
set.seed(20882)
expand_cluster(ci, psi, xi, 0.5, 0.5)
set.seed(20882)
expand_cluster(ci, psi, xi, 0.5, 0.5)
### Data Simulation: -----------------------------------------------------------
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(2, 4, 1, 5, 2)
psi <- rdirichlet(1, xi[1:3]) ### psi_i = alp_i/sum(alp)
ci <- sample(seq(1,3), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- c(2, 1, 3)
nu_k <- rdirichlet(3, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
ci
### Testing Area: --------------------------------------------------------------
set.seed(20882)
expand_cluster(ci, psi, xi, 0.5, 0.5)
### Data Simulation: -----------------------------------------------------------
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(1, 1, 1, 1, 1)
psi <- rdirichlet(1, xi[1:3]) ### psi_i = alp_i/sum(alp)
ci <- sample(seq(1,3), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- c(2, 1, 3)
nu_k <- rdirichlet(3, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
### Next Step: Try when K is not fixed. Start with all procedures.
### Testing Area: --------------------------------------------------------------
set.seed(20882)
expand_cluster(ci, psi, xi, 0.5, 0.5)
### Data Simulation: -----------------------------------------------------------
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(10, 10, 10, 10, 10)
psi <- rdirichlet(1, xi[1:3]) ### psi_i = alp_i/sum(alp)
ci <- sample(seq(1,3), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- c(2, 1, 3)
nu_k <- rdirichlet(3, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
### Next Step: Try when K is not fixed. Start with all procedures.
### Testing Area: --------------------------------------------------------------
set.seed(20882)
expand_cluster(ci, psi, xi, 0.5, 0.5)
ci
factor(ci)
summary(factor(ci))
set.seed(20882)
expand_cluster(ci, psi, xi, 0.5, 0.5)
set.seed(20882)
test_fn <- expand_cluster(ci, psi, xi, 0.5, 0.5)
test_fn
test_fn$new_assign
summary(test_fn$new_assign)
summary(factor(test_fn$new_assign))
summary(factor(ci))
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
set.seed(20882)
test_fn <- expand_cluster(ci, psi, xi, 0.5, 0.5)
test_fn
summary(factor(test_fn$new_assign))
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
set.seed(20882)
test_fn <- expand_cluster(ci, psi, xi, 0.5, 0.5)
summary(factor(test_fn$new_assign))
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
set.seed(20882)
test_fn <- expand_cluster(ci, psi, xi, 0.5, 0.5)
summary(factor(test_fn$new_assign))
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
set.seed(20882)
test_fn <- expand_cluster(ci, psi, xi, 0.5, 0.5)
test_fn
expand_cluster(ci, psi, xi, 0.5, 0.5)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
set.seed(20882)
test_fn <- expand_cluster(ci, psi, xi, 0.5, 0.5)
test_fn
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
set.seed(20882)
test_fn <- expand_cluster(ci, psi, xi, 0.5, 0.5)
test_fn
set.seed(20882)
test_fn <- expand_cluster(ci, psi, xi, 0.5, 0.5)
summary(factor(test_fn$new_assign))
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
set.seed(20882)
test_fn <- expand_cluster(ci, psi, xi, 0.5, 0.5)
test_fn
gc()
### Data Simulation: -----------------------------------------------------------
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(10, 10, 10, 10, 10)
psi <- rdirichlet(1, xi[1:3]) ### psi_i = alp_i/sum(alp)
ci <- sample(seq(1,3), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- c(2, 1, 3)
nu_k <- rdirichlet(3, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
set.seed(20882)
test_fn <- expand_cluster(ci, psi, xi, 0.5, 0.5)
test_fn
library(Rcpp)
library(RcppArmadillo)
library(devtools)
library(DirichletReg)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
### Data Simulation: -----------------------------------------------------------
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(20, 15, 10, 15, 20)
psi <- rdirichlet(1, xi[1:3]) ### psi_i = alp_i/sum(alp)
ci <- sample(seq(1,3), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- c(2, 1, 3)
nu_k <- rdirichlet(3, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
expand_contract(5)
# test_fn <- expand_cluster(ci, psi, xi, 0.5, 0.5)
# summary(factor(test_fn$new_assign))
cluster_assign(ci, xi, data_test, gamma_hyper)
expand_contract(500)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
expand_contract(5)
expand_contract(5, ci)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
expand_contract(5, ci)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
expand_contract(5, ci)
expand_contract(5, ci)
set.seed(20882)
expand_contract(5, ci)
set.seed(20882)
expand_contract(5, ci)
set.seed(20882)
expand_contract(5, ci)
set.seed(20882)
expand_contract(5, ci)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
expand_contract(5, ci)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
expand_contract(5, ci)
expand_contract(5, ci)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
expand_contract(5, ci)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
expand_contract(5, ci)
expand_contract(5, ci)
expand_contract(5, ci)
set.seed(20882)
expand_contract(5, ci)
test_c <- c()
for(i in 1:1000){
test_c <- c(expand_contract(5, ci)$ind, test_c)
}
mean(test_c)
test_c <- c()
for(i in 1:1000){
set.seed(20882)
test_c <- c(expand_contract(5, ci)$ind, test_c)
}
mean(test_c)
test_c <- c()
for(i in 1:1000){
set.seed(20882)
test_c <- c(expand_contract(5, ci)$ind, test_c)
}
mean(test_c)
test_c <- c()
for(i in 1:1000){
set.seed(20882)
test_c <- c(expand_contract(5, ci)$ind, test_c)
}
mean(test_c)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
