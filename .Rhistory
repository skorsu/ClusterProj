allocate_prob(10, rep(1, 30), xi, data_test, gamma_hyper)
allocate_prob(10, rep(1:2, 15), xi, data_test, gamma_hyper)
allocate_prob(10, rep(1:5, 6), xi, data_test, gamma_hyper)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 4)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 4)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 6)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 10)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 15)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 100)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 50)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 50)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 30)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 20)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 13)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 14)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 15)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 16)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 15)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 15)
set.seed(20882)
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 15)
result_test
result_test["clus_assign"]
result_test["clus_assign"][, 16]
result_test$clus_assign[, 16]
result_test$alpha_update[, 16]
set.seed(20882)
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 15)
ci <- result_test$clus_assign[, 16]
alpha_vec <- result_test$alpha_update[, 16]
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
set.seed(20882)
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 15)
### Data Simulation: -----------------------------------------------------------
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(20, 15, 10, 15, 20)
alpha_vec <- rgamma(5, xi, 1)
alpha_vec[4:5] <- 0
psi <- alpha_vec/sum(alpha_vec)
ci <- sample(seq(1,5), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- c(2, 1, 3)
nu_k <- rdirichlet(3, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
set.seed(20882)
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 15)
ci <- result_test$clus_assign[, 16]
alpha_vec <- result_test$alpha_update[, 16]
result_e <- expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
ci <- result_e$new_assign
alpha_vec <- result_e$new_alpha
alpha_vec
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
set.seed(20882)
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 15)
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(20, 15, 10, 15, 20)
alpha_vec <- rgamma(5, xi, 1)
alpha_vec[4:5] <- 0
psi <- alpha_vec/sum(alpha_vec)
ci <- sample(seq(1,5), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- c(2, 1, 3)
nu_k <- rdirichlet(3, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
set.seed(20882)
expand_step(5, rep(1:5, 6), alpha_vec, xi, 0.5, 0.5)
set.seed(20882)
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 100)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 100)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 100)
set.seed(20882)
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 15)
ci <- result_test$clus_assign[, 16]
alpha_vec <- result_test$alpha_update[, 16]
result_e <- expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
ci <- result_e$new_assign
alpha_vec <- result_e$new_alpha
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
set.seed(1)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
set.seed(2)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
set.seed(31807)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 3)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 2)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 2)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 100)
allocate_prob(10, rep(1:5, 6), xi, data_test, gamma_hyper)
set.seed(20882)
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 15)
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(20, 15, 10, 15, 20)
alpha_vec <- rgamma(5, xi, 1)
alpha_vec[4:5] <- 0
psi <- alpha_vec/sum(alpha_vec)
ci <- sample(seq(1,5), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- c(2, 1, 3)
nu_k <- rdirichlet(3, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 16)
set.seed(20882)
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 15)
ci <- result_test$clus_assign[, 16]
alpha_vec <- result_test$alpha_update[, 16]
result_e <- expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
ci <- result_e$new_assign
alpha_vec <- result_e$new_alpha
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
### Data Simulation: -----------------------------------------------------------
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(20, 15, 10, 15, 20)
alpha_vec <- rgamma(5, xi, 1)
alpha_vec[4:5] <- 0
psi <- alpha_vec/sum(alpha_vec)
ci <- sample(seq(1,5), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- c(2, 1, 3)
nu_k <- rdirichlet(3, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
set.seed(20882)
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 15)
result_test
ci <- result_test$clus_assign[, 16]
alpha_vec <- result_test$alpha_update[, 16]
ci
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 100)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1000)
### Data Simulation: -----------------------------------------------------------
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(20, 15, 10, 15, 20)
alpha_vec <- rgamma(5, xi, 1)
alpha_vec[4:5] <- 0
psi <- alpha_vec/sum(alpha_vec)
ci <- sample(seq(1,5), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- c(2, 1, 3)
nu_k <- rdirichlet(3, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1000)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1000)
install.packages("SALSO")
install.packages("salso")
library(salso)
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 1000)
summary(factor(result_test$n_active))
result_test$clus_assign
result_test$clus_assign
dim(result_test$clus_assign)
t(result_test$clus_assign)
salso(t(result_test$clus_assign))
salso_object <- salso(t(result_test$clus_assign))
summary(salso_object)
t(result_test$clus_assign)
t(result_test$clus_assign)[502:1001, ]
salso_object <- salso(t(result_test$clus_assign)[502:1001, ])
summary(salso_object)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
set.seed(20882)
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 1000)
salso_object <- salso(t(result_test$clus_assign)[502:1001, ])
summary(salso_object)
summary(salso_object)
cluster_assign(5, ci, xi, data_test, gamma_hyper, alpha_vec)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
allocate_prob(0, ci, xi, data_test, gamma_hyper)
allocate_prob(5, ci, xi, data_test, gamma_hyper)
allocate_prob(2, ci, xi, data_test, gamma_hyper)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
allocate_prob(2, ci, xi, data_test, gamma_hyper)
cluster_assign(5, ci, xi, data_test, gamma_hyper, alpha_vec)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_assign(5, ci, xi, data_test, gamma_hyper, alpha_vec)
test <- cluster_assign(5, ci, xi, data_test, gamma_hyper, alpha_vec)
test$norm_prob
apply(test$norm_prob, 1, sum)
apply(test$norm_prob, 2, sum)
apply(test$norm_prob, 2, sum)
test <- cluster_assign(5, ci, xi, data_test, gamma_hyper, alpha_vec)
test$norm_prob
test <- cluster_assign(2, ci, xi, data_test, gamma_hyper, alpha_vec)
test <- cluster_assign(3, ci, xi, data_test, gamma_hyper, alpha_vec)
apply(test$norm_prob, 2, sum)
test$norm_prob
test <- cluster_assign(3, ci+1, xi, data_test, gamma_hyper, alpha_vec)
test <- cluster_assign(5, ci+1, xi, data_test, gamma_hyper, alpha_vec)
apply(test$norm_prob, 2, sum)
test$norm_prob
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_func(5, ci, alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 1000)
cluster_func(5, ci, alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
cluster_func(5, ci, alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 11)
### Required Library: ----------------------------------------------------------
library(Rcpp)
library(RcppArmadillo)
library(devtools)
library(DirichletReg)
library(salso)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
### Data Simulation: -----------------------------------------------------------
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(20, 15, 10, 15, 20)
alpha_vec <- rgamma(5, xi, 1)
alpha_vec[4:5] <- 0
psi <- alpha_vec/sum(alpha_vec)
ci <- sample(seq(1,5), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- c(2, 1, 3)
nu_k <- rdirichlet(3, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
split_merge(5, rep(1:3, 10), alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 10)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
split_merge(5, rep(1:3, 10), alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 10)
split_merge(5, rep(1:3, 10), alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 10)
split_merge(5, rep(1:3, 10), alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 10)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
split_merge(5, rep(1:3, 10), alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 10)
split_merge(5, rep(1:3, 10), alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 10)
library(Rcpp)
library(RcppArmadillo)
library(devtools)
library(DirichletReg)
library(salso)
library(ClusterProj)
(1:5)*1.5
rep(1:2, 3)/2
rep(2:1, 3)/2
### Required Library: ----------------------------------------------------------
library(Rcpp)
library(RcppArmadillo)
library(devtools)
library(DirichletReg)
library(salso)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
### Data Simulation: -----------------------------------------------------------
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(10, 15, 20, 10, 15)
alpha_vec <- rgamma(5, xi, 1)
alpha_vec[4:5] <- 0
psi <- alpha_vec/sum(alpha_vec)
ci <- sample(seq(1,5), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- c(2, 1, 3)
nu_k <- rdirichlet(3, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
cluster_func(5, rep(1, 30), alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 10, 1000)
cluster_func(5, rep(1, 30), alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 50, 1000)
cluster_func(5, rep(1, 30), alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 50, 100)
cluster_func(5, rep(1, 30), alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 100, 100)
rm(list = ls())
### Data Simulation
set.seed(20882)
xi_test <- (1:5)*1.5
alpha_vec_test <- rgamma(5, xi_test, 1)
psi_test <- alpha_vec_test/sum(alpha_vec_test)
ci_test <- sample(seq(1,5), size = 50, replace = TRUE, prob = psi_test)
### Assume: data is in R4; n = 100
gamma_hyper_test <- rep(2:1, 3)/2
nu_k_test <- rdirichlet(6, gamma_hyper_test)
sum_y_test <- rpois(100, 2) + 1
data_test <- matrix(NA, ncol = 4, nrow = 100)
for(i in 1:100){
data_test[i, ] <- rmultinom(1, sum_y_test[i], nu_k_test[ci_test[i], ])
}
### Data Simulation
set.seed(20882)
xi_test <- (1:5)*1.5
alpha_vec_test <- rgamma(5, xi_test, 1)
psi_test <- alpha_vec_test/sum(alpha_vec_test)
ci_test <- sample(seq(1,5), size = 50, replace = TRUE, prob = psi_test)
### Assume: data is in R4; n = 100
gamma_hyper_test <- rep(2:1, 3)/2
nu_k_test <- rdirichlet(6, gamma_hyper_test)
sum_y_test <- rpois(100, 2) + 1
data_test <- matrix(NA, ncol = 6, nrow = 100)
for(i in 1:100){
data_test[i, ] <- rmultinom(1, sum_y_test[i], nu_k_test[ci_test[i], ])
}
### Data Simulation
set.seed(20882)
xi_test <- (1:5)*1.5
alpha_vec_test <- rgamma(5, xi_test, 1)
psi_test <- alpha_vec_test/sum(alpha_vec_test)
ci_test <- sample(seq(1,5), size = 50, replace = TRUE, prob = psi_test)
### Assume: data is in R4; n = 100
gamma_hyper_test <- rep(2:1, 3)/2
nu_k_test <- rdirichlet(5, gamma_hyper_test)
sum_y_test <- rpois(50, 2)
data_test <- matrix(NA, ncol = 6, nrow = 100)
for(i in 1:50){
data_test[i, ] <- rmultinom(1, sum_y_test[i], nu_k_test[ci_test[i], ])
}
summary(factor(ci_test)) ## Actual Cluster assignment
summary(factor(ci_test)) ## Actual Cluster assignment
alpha_vec_test
rm(list = ls())
### Data Simulation
set.seed(20882)
xi_test <- (1:5)*1.5
alpha_vec_test <- rgamma(5, xi_test, 1)
psi_test <- alpha_vec_test/sum(alpha_vec_test)
ci_test <- sample(seq(1,5), size = 50, replace = TRUE, prob = psi_test)
### Assume: data is in R4; n = 100
gamma_hyper_test <- rep(2:1, 3)/2
nu_k_test <- rdirichlet(5, gamma_hyper_test)
sum_y_test <- rpois(50, 2)
data_test <- matrix(NA, ncol = 6, nrow = 100)
for(i in 1:50){
data_test[i, ] <- rmultinom(1, sum_y_test[i], nu_k_test[ci_test[i], ])
}
summary(factor(ci_test)) ## Actual Cluster assignment
set.seed(20882)
result_test <- cluster_func(5, rep(1, 50), rep(2, 5), xi_test, data_test,
gamma_hyper_test, 0.5, 0.5, 15, 5000)
set.seed(20882)
time_start <- Sys.time()
result_test <- cluster_func(5, rep(1, 50), rep(2, 5), xi_test, data_test,
gamma_hyper_test, 0.5, 0.5, 15, 5000)
total_time <- time_start - Sys.time()
total_time
set.seed(20882)
time_start <- Sys.time()
result_test <- cluster_func(5, rep(1, 50), rep(2, 5), xi_test, data_test,
gamma_hyper_test, 0.5, 0.5, 20, 5000)
total_time <- Sys.time() - time_start
total_time
result_test
result_test$clus_assign[, -(1:2000)]
result_test$n_active[, -(1:2000)]
as.numeric(result_test$n_active[, -(1:2000)])
result_test$n_active[, -(1:2000)]
as.numeric(result_test$n_active[-(1:2000)])
plot(as.numeric(result_test$n_active[-(1:2000)]))
plot(as.numeric(result_test$n_active[-(1:2000)]), type = "l")
, type = "l"
plot(as.numeric(result_test$n_active[-(1:2000)]))
plot(factor(result_test$n_active[-(1:2000)]))
plot(factor(result_test$n_active[-(1:2000)]), main = "Number of the active cluster")
plot(factor(result_test$n_active[-(1:2000)]),
main = "Number of the active cluster", xlab = "Active Cluster")
result_test
result_test$alpha_update
result_test$alpha_update[, -(1:2000)]
result_test$alpha_update[1, -(1:2000)]
plot(result_test$alpha_update[1, -(1:2000)])
plot(result_test$alpha_update[1, -(1:2000)][result_test$alpha_update[1, -(1:2000)] != 0])
alpha_vec_test
abline(h = alpha_vec_test[1])
plot(result_test$alpha_update[1, -(1:2000)][result_test$alpha_update[1, -(1:2000)] != 0])
abline(h = alpha_vec_test[1])
abline(h = alpha_vec_test[1], col = "red")
plot(result_test$alpha_update[1, -(1:2000)][result_test$alpha_update[1, -(1:2000)] != 0])
abline(h = alpha_vec_test[1], col = "red")
abline(h = alpha_vec_test[2], col = "red")
plot(result_test$alpha_update[2, -(1:2000)][result_test$alpha_update[2, -(1:2000)] != 0])
abline(h = alpha_vec_test[2], col = "red")
plot(result_test$alpha_update[3, -(1:2000)][result_test$alpha_update[3, -(1:2000)] != 0])
abline(h = alpha_vec_test[3], col = "red")
par(mfrow = c(3, 2))
for(i in 1:5){
main_text <- paste0("alpha_", i)
plot(result_test$alpha_update[i, -(1:2000)][result_test$alpha_update[i, -(1:2000)] != 0])
abline(h = alpha_vec_test[i], col = "red")
}
par(mfrow = c(3, 2))
for(i in 1:5){
main_text <- paste0("alpha_", i)
plot(result_test$alpha_update[i, -(1:2000)]
[result_test$alpha_update[i, -(1:2000)] != 0], ylab = " ", main = main_text)
abline(h = alpha_vec_test[i], col = "red")
}
salso_object <- salso(t(result_test$clus_assign[, -(1:2001)]))
summary_salso <- summary(salso_object)
summary_salso$meanPS
summary_salso$meanPSM
