compileAttributes()
build()
install()
library(ClusterProj)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
# test_fn <- expand_cluster(ci, psi, xi, 0.5, 0.5)
# summary(factor(test_fn$new_assign))
cluster_assign(ci, xi, data_test, gamma_hyper)
summary(factor(ci))
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
ci
summary(factor(ci))
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
uninstall()
compileAttributes()
build()
install()
install.packages("RcppArmadillo")
library(ClusterProj)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
library(Rcpp)
library(RcppArmadillo)
library(devtools)
library(DirichletReg)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(20, 15, 10, 15, 20)
psi <- c(rdirichlet(1, xi[1:3]), 0, 0) ### psi_i = alp_i/sum(alp)
ci <- sample(seq(1,5), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- c(2, 1, 3)
nu_k <- rdirichlet(3, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
### Testing Area: --------------------------------------------------------------
set.seed(20882)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(1:3, rep(c(1,2,3), 5), psi, xi, 0.5, 0.5)
psi
contract_cluster(1:3, rep(c(1,2,3), 5), c(0.2, 0.2, 0.6), xi, 0.5, 0.5)
contract_cluster(1:3, rep(c(1,2,3), 5), c(0.2, 0.2, 0.6), xi, 0.5, 0.5)
contract_cluster(1:3, rep(c(1,2,3), 5), c(0.2, 0.2, 0.6), xi, 0.5, 0.5)
contract_cluster(1:3, rep(c(1,2,3), 5), c(0.01, 0.01, 0.98), xi, 0.5, 0.5)
contract_cluster(1:3, rep(c(1,2,3), 5), c(0.01, 0.01, 0.98), xi, 0.5, 0.5)
contract_cluster(1:3, rep(c(1,2,3), 5), c(0.01, 0.01, 0.98), c(1, 1, 1), 0.5, 0.5)
contract_cluster(1:3, rep(c(1,2,3), 5), c(1/3, 1/3, 1/3), c(1, 1, 1), 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
summary(factor(ci))
# test_fn <- expand_cluster(ci, psi, xi, 0.5, 0.5)
# summary(factor(test_fn$new_assign))
cluster_assign(ci, xi, data_test, gamma_hyper)
summary(factor(ci))
contract_cluster(1:3, rep(c(1,2,3), 5), c(1/3, 1/3, 1/3), c(1, 1, 1), 0.5, 0.5)
contract_cluster(1:3, rep(c(1,2,3), 5), c(1/3, 1/3, 1/3), c(1, 1, 1), 0.5, 0.5)
contract_cluster(1:3, rep(c(1,2,3), 5), c(1/3, 1/3, 1/3), c(1, 1, 1), 0.5, 0.5)
contract_cluster(1:3, rep(c(1,2,3), 5), c(1/3, 1/3, 1/3), c(1, 1, 1), 0.5, 0.5)
contract_cluster(1:3, rep(c(1,2,3), 5), c(1/3, 1/3, 1/3), c(1, 1, 1), 0.5, 0.5)
contract_cluster(1:3, rep(c(1,2,3), 5), c(1/3, 1/3, 1/3), c(1, 1, 1), 0.5, 0.5)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(1:3, rep(c(1,2,3), 5), c(1/3, 1/3, 1/3), c(1, 1, 1), 0.5, 0.5)
contract_cluster(1:3, rep(c(1,2,3), 5), c(1/3, 1/3, 1/3), c(1, 1, 1), 0.5, 0.5)
contract_cluster(1:3, rep(c(1,2,3), 5), c(0.2, 0.3, 0.5), c(1, 1, 1), 0.5, 0.5)
contract_cluster(1:3, rep(c(1,2,3), 5), c(0.2, 0.3, 0.5), c(30, 15, 20), 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
summary(factor(ci))
contract_cluster(1:3, rep(c(1,2,3), 5), c(0.2, 0.3, 0.5), c(30, 15, 20), 0.5, 0.5)
contract_cluster(1:3, rep(c(1,2,3), 5), c(0.2, 0.3, 0.5), c(30, 15, 20), 0.5, 0.5)
contract_cluster(1:3, rep(c(1,2,3), 5), c(0.2, 0.3, 0.5), c(30, 15, 20), 0.5, 0.5)
contract_cluster(1:3, rep(c(1,2,3), 5), c(0.2, 0.3, 0.5), c(30, 15, 20), 0.5, 0.5)
summary(factor(ci))
contract_cluster(1:3, rep(c(1,2,3), 5), c(0.2, 0.3, 0.5), c(30, 15, 20), 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(1:3, rep(c(1,2,3), 5), c(0.2, 0.3, 0.1, 0.2, 0.2), c(30, 15, 20), 0.5, 0.5)
test_result <- expand_cluster(5, c(4,5), c(1,2,3), ci, psi, xi, 0.5, 0.5)
test_result
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
ci
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
contract_cluster(c(1,2,3), ci, psi, xi, 0.5, 0.5)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
contract_cluster(5, c(1,2,3), ci, psi, xi, 0.5, 0.5)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
contract_cluster(5, c(1,2,3), ci, psi, xi, 0.5, 0.5)
expand_contract(5, ci, psi, xi, 0.5, 0.5)
cluster_assign(ci, xi, data_test, gamma_hyper)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
expand_contract(5, ci, psi, xi, 0.5, 0.5)
expand_contract(5, ci, psi, xi, 0.5, 0.5)
expand_contract(5, ci, psi, xi, 0.5, 0.5)
uninstall()
compileAttributes()
build()
compileAttributes()
build()
compileAttributes()
build()
install()
library(ClusterProj)
expand_contract(5, ci, psi, xi, 0.5, 0.5)
expand_contract(5, ci, psi, xi, 0.5, 0.5)
expand_contract(5, ci, psi, xi, 0.5, 0.5)
expand_contract(5, ci, psi, xi, 0.5, 0.5)
expand_contract(5, ci, psi, xi, 0.5, 0.5)
psi
expand_contract(5, ci, psi, xi, 0.5, 0.5)
expand_contract(5, ci, psi, xi, 0.5, 0.5)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
expand_contract(5, ci, psi, xi, 0.5, 0.5)
expand_contract(5, ci, psi, xi, 0.5, 0.5)
test <- expand_contract(5, ci, psi, xi, 0.5, 0.5)
test
test <- expand_contract(5, ci, psi, xi, 0.5, 0.5)
test
test
xi
expand_contract(3, rep(1, 30), c(1, 0, 0), xi[1:3], 0.5, 0.5)
expand_contract(3, rep(1, 30), c(1, 0, 0), xi[1:3], 0.5, 0.5)
expand_contract(3, rep(1, 30), c(1, 0, 0), xi[1:3], 0.5, 0.5)
expand_contract(3, rep(1, 30), c(1, 0, 0), xi[1:3], 0.5, 0.5)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
expand_contract(3, rep(1, 30), c(1, 0, 0), xi[1:3], 0.5, 0.5)
test <- expand_contract(5, ci, psi, xi, 0.5, 0.5)
test
test <- expand_contract(5, ci, psi, xi, 0.5, 0.5)
test
test <- expand_contract(5, ci, psi, xi, 0.5, 0.5)
test <- expand_contract(5, ci, psi, xi, 0.5, 0.5)
test
uninstall()
library(Rcpp)
library(RcppArmadillo)
library(devtools)
library(DirichletReg)
compileAttributes()
build()
install()
library(ClusterProj)
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(20, 15, 10, 15, 20)
psi <- c(rdirichlet(1, xi[1:3]), 0, 0) ### psi_i = alp_i/sum(alp)
ci <- sample(seq(1,5), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- c(2, 1, 3)
nu_k <- rdirichlet(3, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
cluster_assign(ci, xi, data_test, gamma_hyper)
compileAttributes()
build()
install()
library(ClusterProj)
cluster_assign(ci, xi, data_test, gamma_hyper)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_assign(ci, xi, data_test, gamma_hyper)
ci
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_assign(ci, xi, data_test, gamma_hyper)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_assign(ci, xi, data_test, gamma_hyper)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_assign(ci, xi, data_test, gamma_hyper)
ci
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_assign(ci, xi, data_test, gamma_hyper)
data_test
matrix(10, ncol = 3, nrow = 30)
cluster_assign(ci, xi, matrix(10, ncol = 3, nrow = 30), gamma_hyper)
factorial(30)
factorial(30)/(factorial(10)^3)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_assign(ci, xi, matrix(10, ncol = 3, nrow = 30), gamma_hyper)
cluster_assign(ci, xi, data_test, gamma_hyper)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_assign(ci, xi, data_test, gamma_hyper)
data_test[-30, ]
data_test[-30, ][-1, ]
ci
ci[-30]
which(ci[-30] == 3)
data_test[-30, ][which(ci[-30] == 3), ]
apply(data_test[-30, ][which(ci[-30] == 3), ], 2, sum)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_assign(ci, xi, data_test, gamma_hyper)
matrix(1:3, ncol = 3, nrow = 30)
dum_data <- matrix(1:3, ncol = 3, nrow = 30)
cluster_assign(ci, xi, dum_data, gamma_hyper)
dum_data[-30, ]
dum_data <- matrix((1:3)/10, ncol = 3, nrow = 30)
cluster_assign(ci, xi, dum_data, gamma_hyper)
dum_data[-30, ]
dum_data[-30, ][which(ci[-30] == 1)]
dum_data[-30, ][which(ci[-30] == 1), ]
apply(dum_data[-30, ][which(ci[-30] == 1), ], 2, sum)
gamma_hyper
apply(dum_data[-30, ][which(ci[-30] == 1), ], 2, sum) + gamma_hyper
factorial(apply(dum_data[-30, ][which(ci[-30] == 1), ], 2, sum) + gamma_hyper)
apply(dum_data[-30, ][which(ci[-30] == 1), ], 2, sum) + gamma_hyper
sum(apply(dum_data[-30, ][which(ci[-30] == 1), ], 2, sum) + gamma_hyper)
factorial(sum(apply(dum_data[-30, ][which(ci[-30] == 1), ], 2, sum) + gamma_hyper))
prod(factorial(apply(dum_data[-30, ][which(ci[-30] == 1), ], 2, sum) + gamma_hyper))
factorial(sum(apply(dum_data[-30, ][which(ci[-30] == 1), ], 2, sum) + gamma_hyper))/prod(factorial(apply(dum_data[-30, ][which(ci[-30] == 1), ], 2, sum) + gamma_hyper))
cluster_assign(ci, xi, dum_data, gamma_hyper)
sum(apply(dum_data[-30, ][which(ci[-30] == 1), ], 2, sum) + gamma_hyper)
apply(dum_data[-30, ][which(ci[-30] == 1), ], 2, sum)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_assign(ci, xi, dum_data, gamma_hyper)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_assign(ci, xi, dum_data, gamma_hyper)
dum_data[-30, ]
dum_data[-30, ][which(ci[-30] == 3), ]
sum(dum_data[-30, ][which(ci[-30] == 3), ])
sum(dum_data[-30, ][which(ci[-30] == 3), ])/3
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_assign(ci, xi, dum_data, gamma_hyper)
apply(dum_data[-30, ][which(ci[-30] == 3), ], ,2 sum)
apply(dum_data[-30, ][which(ci[-30] == 3), ], 2, sum)
apply(dum_data[-30, ][which(ci[-30] == 3), ], 2, sum) + gamma_hyper
apply(dum_data[-30, ][which(ci[-30] == 1), ], 2, sum)
apply(dum_data[-30, ][which(ci[-30] == 1), ], 2, sum) + gamma_hyper
factorial(3.9)
factorial(apply(dum_data[-30, ][which(ci[-30] == 1), ], 2, sum) + gamma_hyper)
factorial(apply(dum_data[-30, ][which(ci[-30] == 1), ], 2, sum) + gamma_hyper)
prod(factorial(apply(dum_data[-30, ][which(ci[-30] == 1), ], 2, sum) + gamma_hyper))
factorial(sum(apply(dum_data[-30, ][which(ci[-30] == 1), ], 2, sum) + gamma_hyper))
/prod(factorial(apply(dum_data[-30, ][which(ci[-30] == 1), ], 2, sum) + gamma_hyper))
factorial(sum(apply(dum_data[-30, ][which(ci[-30] == 1), ], 2, sum) + gamma_hyper))/prod(factorial(apply(dum_data[-30, ][which(ci[-30] == 1), ], 2, sum) + gamma_hyper))
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_assign(ci, xi, dum_data, gamma_hyper)
factorial(sum(apply(dum_data[-30, ][which(ci[-30] == 1), ], 2, sum) + gamma_hyper))
factorial(apply(dum_data[-30, ][which(ci[-30] == 3), ], 2, sum) + gamma_hyper)
dum_data[-30, ]
dum_data[30, ]
factorial(0.9)
factorial(0.9)/(factorial(0.3)^3)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_assign(ci, xi, dum_data, gamma_hyper)
sum(apply(dum_data[-30, ][which(ci[-30] == 1), ], 2, sum) + gamma_hyper
)
factorial(apply(dum_data[-30, ][which(ci[-30] == 1), ], 2, sum) + gamma_hyper)
factorial(apply(dum_data[-30, ][which(ci[-30] == 3), ], 2, sum) + gamma_hyper)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_assign(ci, xi, dum_data, gamma_hyper)
factorial(c(4.5, 3.5, 5.5))
gammafn
factorial(c(4.5, 3.5, 5.5) - 1)
factorial(apply(dum_data[-30, ][which(ci[-30] == 3), ], 2, sum) + gamma_hyper - 1)
factorial(sum(apply(dum_data[-30, ][which(ci[-30] == 1), ], 2, sum) + gamma_hyper))/
prod(factorial(apply(dum_data[-30, ][which(ci[-30] == 3), ], 2, sum) + gamma_hyper - 1))
factorial(sum(apply(dum_data[-30, ][which(ci[-30] == 1), ], 2, sum) + gamma_hyper) - 1)/
prod(factorial(apply(dum_data[-30, ][which(ci[-30] == 3), ], 2, sum) + gamma_hyper - 1))
factorial(sum(apply(dum_data[-30, ][which(ci[-30] == 3), ], 2, sum) + gamma_hyper) - 1)/
prod(factorial(apply(dum_data[-30, ][which(ci[-30] == 3), ], 2, sum) + gamma_hyper - 1))
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_assign(ci, xi, dum_data, gamma_hyper)
dum_data[30, ]
dum_data[30, ] + dum_data[-30, ][which(ci[-30] == 3), ]
dum_data[-30, ][which(ci[-30] == 3), ]
apply(dum_data[-30, ][which(ci[-30] == 3), ], 2, sum)
dum_data[30, ] + apply(dum_data[-30, ][which(ci[-30] == 3), ], 2, sum)
dum_data[30, ] + apply(dum_data[-30, ][which(ci[-30] == 3), ], 2, sum) + gamma_hyper
gamma(dum_data[30, ] + apply(dum_data[-30, ][which(ci[-30] == 3), ], 2, sum) + gamma_hyper)
prod(gamma(dum_data[30, ] + apply(dum_data[-30, ][which(ci[-30] == 3), ], 2, sum) + gamma_hyper))
dum_data[30, ] + apply(dum_data[-30, ][which(ci[-30] == 3), ], 2, sum) + gamma_hyper
prod(gamma(dum_data[30, ] + apply(dum_data[-30, ][which(ci[-30] == 3), ], 2, sum) + gamma_hyper))/
gamma(sum(dum_data[30, ] + apply(dum_data[-30, ][which(ci[-30] == 3), ], 2, sum) + gamma_hyper))
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_assign(ci, xi, dum_data, gamma_hyper)
cluster_assign(ci, xi, dum_data, gamma_hyper)
cluster_assign(ci, xi, dum_data, gamma_hyper)
cluster_assign(ci, xi, dum_data, gamma_hyper)
cluster_assign(ci, xi, dum_data, gamma_hyper)
cluster_assign(ci, xi, dum_data, gamma_hyper)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_assign(ci, xi, dum_data, gamma_hyper)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_assign(ci, xi, dum_data, gamma_hyper)
cluster_assign(ci, xi, dum_data, gamma_hyper)
cluster_assign(ci, xi, dum_data, gamma_hyper)
cluster_assign(ci, xi, data_test, gamma_hyper)
cluster_assign(ci, xi, data_test, gamma_hyper)
cluster_assign(ci, xi, data_test, gamma_hyper)
cluster_assign(ci, xi, data_test, gamma_hyper)
cluster_assign(ci, xi, data_test, gamma_hyper)
cluster_assign(ci, xi, data_test, gamma_hyper)
cluster_assign(ci, xi, data_test, gamma_hyper)
cluster_assign(ci, xi, data_test, gamma_hyper)
cluster_assign(ci, xi, data_test, gamma_hyper)
cluster_assign(ci, xi, data_test, gamma_hyper)
cluster_assign(ci, xi, data_test, gamma_hyper)
smaple(c(c(1,2), c(5,6)))
sample(c(c(1,2), c(5,6)))
sample(c(c(1,2), c(5,6)), 1)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_assign(ci, xi, data_test, gamma_hyper)
ci
(ci+2)
cluster_assign((ci+2), xi, data_test, gamma_hyper)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_assign((ci+2), xi, data_test, gamma_hyper)
cluster_assign((ci+2), xi, data_test, gamma_hyper)
dum_data <- matrix((1:3)/10, ncol = 3, nrow = 30)
cluster_assign(ci, xi, dum_data, gamma_hyper)
