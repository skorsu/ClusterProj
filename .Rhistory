allocate_prob(1, ci+1, xi, data_test, gamma_hyper)/sum(allocate_prob(1, ci+1, xi, data_test, gamma_hyper))
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
set.seed(20882)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
set.seed(20882)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
set.seed(20882)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_assign(ci, xi, data_test, gamma_hyper)
cluster_assign(5, ci, xi, data_test, gamma_hyper)
set.seed(20882)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
set.seed(20882)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
### Testing Area: --------------------------------------------------------------
set.seed(20882)
cluster_assign(5, ci, xi, data_test, gamma_hyper, alpha_vec)
cluster_assign(5, ci, xi, data_test, gamma_hyper, alpha_vec)
cluster_assign(5, ci, xi, data_test, gamma_hyper, alpha_vec)
cluster_assign(5, ci, xi, data_test, gamma_hyper, alpha_vec)
cluster_assign(5, ci, xi, data_test, gamma_hyper, alpha_vec)
cluster_assign(5, ci, xi, data_test, gamma_hyper, alpha_vec)
cluster_assign(5, ci, xi, data_test, gamma_hyper, alpha_vec)
cluster_assign(5, ci, xi, data_test, gamma_hyper, alpha_vec)
cluster_assign(5, ci, xi, data_test, gamma_hyper, alpha_vec)
cluster_assign(5, ci, xi, data_test, gamma_hyper, alpha_vec)
cluster_assign(5, ci, xi, data_test, gamma_hyper, alpha_vec)
cluster_assign(5, ci, xi, data_test, gamma_hyper, alpha_vec)
cluster_assign(5, ci, xi, data_test, gamma_hyper, alpha_vec)
cluster_assign(5, ci, xi, data_test, gamma_hyper, alpha_vec)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 100)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 100)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 100)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 100)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 100)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 2)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 5)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 10)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 9)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 100)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
set.seed(20882)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(2, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(3, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(4, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(1, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, rep(1, 30), alpha_vec, xi, 0.5, 0.5)
expand_step(5, rep(1:2, 15), alpha_vec, xi, 0.5, 0.5)
expand_step(5, rep(1:4, c(10,10,5,5)), alpha_vec, xi, 0.5, 0.5)
rep(1:4, c(10,10,5,5))
expand_step(5, rep(1:4, c(10,10,5,5)), alpha_vec, xi, 0.5, 0.5)
set.seed(20882)
expand_step(5, rep(1:4, c(10,10,5,5)), alpha_vec, xi, 0.5, 0.5)
expand_step(5, rep(1:4, c(10,10,5,5)), alpha_vec, xi, 0.5, 0.5)
expand_step(5, rep(1:4, c(10,10,5,5)), alpha_vec, xi, 0.5, 0.5)
expand_step(5, rep(1:4, c(10,10,5,5)), alpha_vec, xi, 0.5, 0.5)
expand_step(5, rep(1:4, c(10,10,5,5)), alpha_vec, xi, 0.5, 0.5)
expand_step(5, rep(1, 30), alpha_vec, xi, 0.5, 0.5)
expand_step(5, rep(1:5, 6), alpha_vec, xi, 0.5, 0.5)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
expand_step(5, rep(1:5, 6), alpha_vec, xi, 0.5, 0.5)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 100)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1000)
set.seed(20882)
result_test
set.seed(20882)
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1000)
result_test$n_active
plot(result_test$n_active)
plot(result_test$n_active, tupe = "l")
plot(result_test$n_active, type = "l")
factor(result_test$n_active)
summary(factor(result_test$n_active))
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1000)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 3)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 10)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 5)
cluster_assign(5, ci, xi, data_test, gamma_hyper, alpha_vec)
cluster_assign(5, ci, xi, data_test, gamma_hyper, alpha_vec)
cluster_assign(5, rep(1:5, 6), xi, data_test, gamma_hyper, alpha_vec)
cluster_assign(5, rep(1:5, 6), xi, data_test, gamma_hyper, rep(1, 5))
cluster_assign(2, rep(1:5, 6), xi, data_test, gamma_hyper, rep(1, 5))
cluster_assign(5, rep(1:5, 6), xi, data_test, gamma_hyper, rep(1, 5))
cluster_assign(5, rep(1, 30), xi, data_test, gamma_hyper, rep(1, 5))
cluster_assign(5, rep(1, 30), xi, data_test, gamma_hyper, rep(1, 5))
cluster_assign(5, rep(1, 30), xi, data_test, gamma_hyper, rep(1, 5))
cluster_assign(5, rep(1, 30), xi, data_test, gamma_hyper, rep(23, 5))
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 5)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 4)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 4)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 4)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
allocate_prob(0, ci, xi, data_test, gamma_hyper)
allocate_prob(30, ci, xi, data_test, gamma_hyper)
allocate_prob(10, ci, xi, data_test, gamma_hyper)
allocate_prob(10, rep(1, 30), xi, data_test, gamma_hyper)
cluster_assign(5, rep(1, 30), xi, data_test, gamma_hyper, alpha_vec)
cluster_assign(5, rep(5, 30), xi, data_test, gamma_hyper, alpha_vec)
cluster_assign(5, rep(4, 30), xi, data_test, gamma_hyper, alpha_vec)
cluster_assign(5, rep(3, 30), xi, data_test, gamma_hyper, alpha_vec)
allocate_prob(10, rep(1, 30), xi, data_test, gamma_hyper)
allocate_prob(10, rep(1:2, 15), xi, data_test, gamma_hyper)
allocate_prob(10, rep(1:5, 6), xi, data_test, gamma_hyper)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 4)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 4)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 6)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 10)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 15)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 100)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 50)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 50)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 30)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 20)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 13)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 14)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 15)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 16)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 15)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 15)
set.seed(20882)
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 15)
result_test
result_test["clus_assign"]
result_test["clus_assign"][, 16]
result_test$clus_assign[, 16]
result_test$alpha_update[, 16]
set.seed(20882)
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 15)
ci <- result_test$clus_assign[, 16]
alpha_vec <- result_test$alpha_update[, 16]
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
set.seed(20882)
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 15)
### Data Simulation: -----------------------------------------------------------
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(20, 15, 10, 15, 20)
alpha_vec <- rgamma(5, xi, 1)
alpha_vec[4:5] <- 0
psi <- alpha_vec/sum(alpha_vec)
ci <- sample(seq(1,5), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- c(2, 1, 3)
nu_k <- rdirichlet(3, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
set.seed(20882)
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 15)
ci <- result_test$clus_assign[, 16]
alpha_vec <- result_test$alpha_update[, 16]
result_e <- expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
ci <- result_e$new_assign
alpha_vec <- result_e$new_alpha
alpha_vec
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
set.seed(20882)
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 15)
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(20, 15, 10, 15, 20)
alpha_vec <- rgamma(5, xi, 1)
alpha_vec[4:5] <- 0
psi <- alpha_vec/sum(alpha_vec)
ci <- sample(seq(1,5), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- c(2, 1, 3)
nu_k <- rdirichlet(3, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
set.seed(20882)
expand_step(5, rep(1:5, 6), alpha_vec, xi, 0.5, 0.5)
set.seed(20882)
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 100)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 100)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 100)
set.seed(20882)
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 15)
ci <- result_test$clus_assign[, 16]
alpha_vec <- result_test$alpha_update[, 16]
result_e <- expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
ci <- result_e$new_assign
alpha_vec <- result_e$new_alpha
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
set.seed(1)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
set.seed(2)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
set.seed(31807)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 3)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 2)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 2)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 100)
allocate_prob(10, rep(1:5, 6), xi, data_test, gamma_hyper)
set.seed(20882)
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 15)
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(20, 15, 10, 15, 20)
alpha_vec <- rgamma(5, xi, 1)
alpha_vec[4:5] <- 0
psi <- alpha_vec/sum(alpha_vec)
ci <- sample(seq(1,5), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- c(2, 1, 3)
nu_k <- rdirichlet(3, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 16)
set.seed(20882)
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 15)
ci <- result_test$clus_assign[, 16]
alpha_vec <- result_test$alpha_update[, 16]
result_e <- expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
ci <- result_e$new_assign
alpha_vec <- result_e$new_alpha
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1)
### Data Simulation: -----------------------------------------------------------
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(20, 15, 10, 15, 20)
alpha_vec <- rgamma(5, xi, 1)
alpha_vec[4:5] <- 0
psi <- alpha_vec/sum(alpha_vec)
ci <- sample(seq(1,5), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- c(2, 1, 3)
nu_k <- rdirichlet(3, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
set.seed(20882)
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 15)
result_test
ci <- result_test$clus_assign[, 16]
alpha_vec <- result_test$alpha_update[, 16]
ci
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 100)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1000)
### Data Simulation: -----------------------------------------------------------
set.seed(20882)
### Assignment vector: Assume that we have 3 clusters.
xi <- c(20, 15, 10, 15, 20)
alpha_vec <- rgamma(5, xi, 1)
alpha_vec[4:5] <- 0
psi <- alpha_vec/sum(alpha_vec)
ci <- sample(seq(1,5), size = 30, replace = TRUE, prob = psi)
### Assume: data is in R3; n = 30
gamma_hyper <- c(2, 1, 3)
nu_k <- rdirichlet(3, gamma_hyper)
sum_y <- rpois(30, 5)
data_test <- matrix(NA, ncol = 3, nrow = 30)
for(i in 1:30){
data_test[i, ] <- rmultinom(1, sum_y[i], nu_k[ci[i], ])
}
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1000)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test, gamma_hyper, 0.5, 0.5, 1000)
install.packages("SALSO")
install.packages("salso")
library(salso)
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 1000)
summary(factor(result_test$n_active))
result_test$clus_assign
result_test$clus_assign
dim(result_test$clus_assign)
t(result_test$clus_assign)
salso(t(result_test$clus_assign))
salso_object <- salso(t(result_test$clus_assign))
summary(salso_object)
t(result_test$clus_assign)
t(result_test$clus_assign)[502:1001, ]
salso_object <- salso(t(result_test$clus_assign)[502:1001, ])
summary(salso_object)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
set.seed(20882)
result_test <- cluster_func(5, ci, alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 1000)
salso_object <- salso(t(result_test$clus_assign)[502:1001, ])
summary(salso_object)
summary(salso_object)
cluster_assign(5, ci, xi, data_test, gamma_hyper, alpha_vec)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
expand_step(5, ci, alpha_vec, xi, 0.5, 0.5)
allocate_prob(0, ci, xi, data_test, gamma_hyper)
allocate_prob(5, ci, xi, data_test, gamma_hyper)
allocate_prob(2, ci, xi, data_test, gamma_hyper)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
allocate_prob(2, ci, xi, data_test, gamma_hyper)
cluster_assign(5, ci, xi, data_test, gamma_hyper, alpha_vec)
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_assign(5, ci, xi, data_test, gamma_hyper, alpha_vec)
test <- cluster_assign(5, ci, xi, data_test, gamma_hyper, alpha_vec)
test$norm_prob
apply(test$norm_prob, 1, sum)
apply(test$norm_prob, 2, sum)
apply(test$norm_prob, 2, sum)
test <- cluster_assign(5, ci, xi, data_test, gamma_hyper, alpha_vec)
test$norm_prob
test <- cluster_assign(2, ci, xi, data_test, gamma_hyper, alpha_vec)
test <- cluster_assign(3, ci, xi, data_test, gamma_hyper, alpha_vec)
apply(test$norm_prob, 2, sum)
test$norm_prob
test <- cluster_assign(3, ci+1, xi, data_test, gamma_hyper, alpha_vec)
test <- cluster_assign(5, ci+1, xi, data_test, gamma_hyper, alpha_vec)
apply(test$norm_prob, 2, sum)
test$norm_prob
uninstall()
compileAttributes()
build()
install()
library(ClusterProj)
cluster_func(5, ci, alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 1000)
cluster_func(5, ci, alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
set.seed(20882)
cluster_func(5, ci, alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 10)
cluster_func(5, ci, alpha_vec, xi, data_test,
gamma_hyper, 0.5, 0.5, 11)
